Copyright (c) (2013), Intel Corporation.

This Houdini binaries ("Software") is furnished under license and may only be used or copied in accordance with the terms of that license. No license, express or implied, by estoppel or otherwise, to any intellectual property rights is granted by this document. The Software is subject to change without notice, and should not be construed as a commitment by Intel Corporation to market, license, sell or support any product or technology. Unless otherwise provided for in the license under which this Software is provided, the Software is provided AS IS, with no warranties of any kind, express or implied. Except as expressly permitted by the Software license, neither Intel Corporation nor its suppliers assumes any responsibility or liability for any errors or inaccuracies that may appear herein. Except as expressly permitted by the Software license, no part of the Software may be reproduced, stored in a retrieval system, transmitted in any form,or distributed by any means without the express written consent of Intel Corporation.


This folder includes Intel(R) prebuilt libraries and utilities for
source ISA emulation.

This is the Houdini feature to enable Intel phone to execute applications
compiled for other ISAs (say ARM). In order to setup this feature, please
follow the instructions below to build the ARM prebuilt libraries.
You can also refer to the README under patches/ to understand details
about how to build ARM prebuilt libraries.

This feature will not be built into the phone without the prebuilt
ARM libraries.
======================================================================

Steps to build ARM libraries for Houdini Feature

step1: Dowanload google AOSP (android open source project) code base from google web site to
you local development host directory ex: ~/google_aosp .
(You can refer to http://source.android.com/source/downloading.html for download details)

mkdir google_aosp
cd google_aosp
repo init -u https://android.googlesource.com/platform/manifest -b android-4.2.2_r1
repo sync

step2: Assume the intel external release code base directory is ~/intel_jb, do the following
commands to run the script of building arm libraries. The script need two parameters,one for
google aosp code base directory in step1, one for intel external release code base directory. It will
build arm libraries from google aosp code base and copy into 
HOUDINI_ARM_PREBUILTS_DIR (defined in device/intel/common/common.mk) directory under
intel external release code base.(You can also refer to the README under patches/ to understand details
about how to build ARM prebuilt libraries in build_arm_lib.sh script.)

cd ~/intel_jb/vendor/intel/houdini/patches
./build_arm_lib.sh ~/google_aosp ~/intel_jb/

(wait for the finish of script build_arm_lib.sh)

step3: Now that you have arm libraries in intel external release code base, just do the clean build
on intel external release code base, you will have system image with Houdini feature enable.
